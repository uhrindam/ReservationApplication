@model IEnumerable<BOL.CATEGORIES>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Kategóriák kezeléses</h2>

@if (TempData["MsgU"] != null)
{
    <div class="alert alert-dismissible alert-danger">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        @TempData["MsgU"].ToString()
    </div>
}

@if (TempData["MsgS"] != null)
{
    <div class="alert alert-dismissible alert-success">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        @TempData["MsgS"].ToString()
    </div>
}

@if (ViewBag.afterCreateCageory != null)
{
    <div class="alert alert-dismissible alert-success">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        @ViewBag.afterCreateCageory
    </div>
}

<p>
    <button type="button" class="btn btn-outline-success" onclick="location.href='@Url.Action("Create")'">Hozzáadás</button>
</p>

<table class="table table-hover">
    <tr class="table-active">
        <th>
            @Html.ActionLink("Kategória név", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), SortBy = "CategoryName", Page = (ViewBag.Page == null ? "1" : ViewBag.Page) })
        </th>
        <th>
            @Html.ActionLink("Ár", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), SortBy = "Price", Page = (ViewBag.Page == null ? "1" : ViewBag.Page) })
        </th>
        <th>
            @Html.ActionLink("A folyamat hossza percben", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), SortBy = "ProcessLengthInMunites", Page = (ViewBag.Page == null ? "1" : ViewBag.Page) })
        </th>
        <th>
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProcessLengthInMunites)
            </td>
            <td>
                <button type="button" class="btn btn-outline-success element" onclick="location.href='@Url.Action("Edit",new { id = item.CategoryName })'">Szerkesztés</button> |

                @Html.ActionLink("Törlés", "Index", new { id = item.CategoryName }, new { @class = "btn btn-outline-success element", @data_toggle = "modal", @data_target = "#confirmdelete", @data_id = item.CategoryName })
            </td>
        </tr>
    }
</table>

@Html.Hidden("itemid", "", new { id = "itemid" })


<div class="modal fade" id="confirmdelete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Törlés megerősítése</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Bezárás"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                Biztos hogy ki szeretnéd törölni a kategóriát?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">Mégsem</button>
                <button type="button" class="btn btn-outline-success" id="Delet">Törlés</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('.element').click(function (e) {
            e.preventDefault();
            $('#confirmdelete').modal('show');

            var id = $(this).data('id');
            $('#itemid').val(id);
        });


        $('#Delet').click(function () {
            var id = $('#itemid').val();
            $.post('@Url.Action("Delete")', { id: id }).then(function () {
                $('#confirmdelete').modal('hide');
            });
        });
    });

</script>

<script>
    function AjaxGoodRedirect(urlAction) {
        $.ajax({
            type: "POST",
            url: urlAction,
            data: {},
            datatype: "JSON",
            contentType: "application/json; charset=utf-8",
            success: function (returndata) {
                if (returndata.ok)
                    window.location = returndata.newurl;
                else
                    window.alert(returndata.message);

            }
        }
        );
    }
</script>

@{
    double TotalPages = ViewBag.TotalPages;
}

<ul class="pagination pagination-lg">
    @for (int i = 1; i <= TotalPages; i++)
    {
        if (i == ViewBag.Page)
        {
            <li class="page-item active">
                <a class="page-link" href="@Url.Action("Index", new { SortOrder=(ViewBag.SortOrder ==null ? "Asc" : ViewBag.SortOrder), SortBy=(ViewBag.SortBy ==null ? "CategoryName" : ViewBag.SortBy), Page=i })">@(i.ToString() + " ")</a>
            </li>
        }
        else
        {
            <li class="page-link">
                @Html.ActionLink(i.ToString() + " ", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder), SortBy = (ViewBag.SortBy == null ? "CategoryName" : ViewBag.SortBy), Page = i })
            </li>
        }
    }
</ul>
